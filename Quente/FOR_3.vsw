{
  "mode": "form-creator",
  "id": "sujevidade-quente",
  "cells": [
    {
      "id": "title",
      "type": "h1",
      "value": "Sujidades"
    },
    {
      "id": "MTY4MzgxMjkxNTM3NTEwMDg2NTE5",
      "type": "table",
      "items": [
        {
          "id": "MTY4MzgxMjkyODYwNTEwMDg2NTE5",
          "type": "input",
          "parentId": "MTY4MzgxMjkxNTM3NTEwMDg2NTE5",
          "row": 0,
          "col": 0,
          "title": "Executor"
        },
        {
          "id": "MTY4MzgxMjkzNzk0NzEwMDg2NTE5",
          "type": "inputDateWithOutTime",
          "parentId": "MTY4MzgxMjkxNTM3NTEwMDg2NTE5",
          "row": 0,
          "col": 1,
          "title": "Data do Ensaio"
        }
      ],
      "metadata": {},
      "title": "TAG"
    },
    {
      "id": "MTY4NDI2ODkyMDA2ODEwMDg4NDk4",
      "type": "list",
      "items": [
        {
          "id": "MTY4NDI2ODkzNTQ1ODEwMDg4NDk4",
          "type": "select",
          "parentId": "MTY4NDI2ODkyMDA2ODEwMDg4NDk4",
          "items": [
            "2952DOM"
          ],
          "title": "TAG Datacolor",
          "value": "2952DOM"
        },
        {
          "id": "MTY4NDQyNzQ3NjIwMzEwMDg4NDk4",
          "type": "select",
          "parentId": "MTY4NDI2ODkyMDA2ODEwMDg4NDk4",
          "items": [
            "Frio",
            "Quente"
          ],
          "value": "Quente",
          "title": "Ciclo",
          "lock": true
        }
      ],
      "title": "Ciclo",
      "value": "Quente"
    },
    {
      "id": "MTY4NDE2MDM2NzQwMzEwMDg2NTE5",
      "type": "h2",
      "value": "Máquina Padrão"
    },
    {
      "id": "MTY4NDE2MDM3MjQ2NDEwMDg2NTE5",
      "type": "table",
      "items": [
        {
          "id": "MTY4NDE2MDM4MDQyODEwMDg2NTE5",
          "type": "file",
          "parentId": "MTY4NDE2MDM3MjQ2NDEwMDg2NTE5",
          "row": 0,
          "col": 0,
          "source": "this.cell.metadata = {}",
          "metadata": {
            "negro_fumo": [
              65.33250000000001,
              65.105,
              65.6,
              65.4425,
              66.22749999999999
            ],
            "sangue": [
              81.715,
              81.87,
              81.20499999999998,
              80.19,
              77.91
            ],
            "chocolateComLeite": [
              67.095,
              67.76,
              67.765,
              67.1375,
              67.6225
            ],
            "vinho": [
              77.8875,
              77.61500000000001,
              77.68499999999999,
              77.5125,
              78.00500000000001
            ],
            "output": ""
          },
          "title": "Ciclo 1",
          "value": ""
        },
        {
          "id": "MTY4NDE2MDM4OTA2OTEwMDg2NTE5",
          "type": "file",
          "parentId": "MTY4NDE2MDM3MjQ2NDEwMDg2NTE5",
          "row": 0,
          "col": 1,
          "source": "this.cell.metadata = {}",
          "metadata": {
            "alreadyExecuted": false,
            "output": ""
          },
          "title": "Ciclo 2",
          "value": ""
        },
        {
          "id": "MTY4NDE2MDM5OTU5ODEwMDg2NTE5",
          "type": "file",
          "parentId": "MTY4NDE2MDM3MjQ2NDEwMDg2NTE5",
          "row": 0,
          "col": 2,
          "source": "this.cell.metadata = {}",
          "metadata": {
            "alreadyExecuted": false,
            "output": ""
          },
          "title": "Ciclo 3",
          "value": ""
        },
        {
          "id": "MTY4NDE2MDQwOTAwNjEwMDg2NTE5",
          "type": "file",
          "parentId": "MTY4NDE2MDM3MjQ2NDEwMDg2NTE5",
          "row": 0,
          "col": 3,
          "source": "this.cell.metadata = {}",
          "metadata": {
            "alreadyExecuted": false,
            "output": ""
          },
          "title": "Ciclo 4",
          "value": ""
        },
        {
          "id": "MTY4NDE2MDQxOTM1NTEwMDg2NTE5",
          "type": "file",
          "parentId": "MTY4NDE2MDM3MjQ2NDEwMDg2NTE5",
          "row": 0,
          "col": 4,
          "source": "this.cell.metadata = {}",
          "metadata": {
            "alreadyExecuted": false,
            "output": ""
          },
          "title": "Ciclo 5",
          "value": ""
        }
      ],
      "metadata": {},
      "title": "Ciclo 5"
    },
    {
      "id": "MTY4NDE2MDQ3MDAzMDEwMDg2NTE5",
      "type": "h2",
      "value": "Ciclos"
    },
    {
      "id": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
      "type": "table",
      "items": [
        {
          "id": "MTY4NDE2MDY4Nzk2OTEwMDg2NTE5",
          "type": "input",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "row": 0,
          "col": 0,
          "title": "Ciclo",
          "width": "50px",
          "value": "1",
          "lock": true
        },
        {
          "id": "MTY4NDE2MDY5NjcxNTEwMDg2NTE5",
          "type": "file",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "row": 0,
          "col": 1,
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "title": "Tiras 1 ao 4",
          "value": ""
        },
        {
          "id": "MTY4NDE2MDcwMjI0NDEwMDg2NTE5",
          "type": "file",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "row": 0,
          "col": 2,
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "title": "Tiras 5 ao 8",
          "value": ""
        },
        {
          "type": "input",
          "row": 1,
          "col": 0,
          "id": "MTY4NDE2MDY4Nzk2OTEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Ciclo",
          "value": "2",
          "lock": true
        },
        {
          "type": "file",
          "row": 1,
          "col": 1,
          "id": "MTY4NDE2MDY5NjcxNTEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Tiras 1 ao 4",
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "value": ""
        },
        {
          "type": "file",
          "row": 1,
          "col": 2,
          "id": "MTY4NDE2MDcwMjI0NDEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Tiras 5 ao 8",
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "value": ""
        },
        {
          "type": "input",
          "row": 2,
          "col": 0,
          "id": "MTY4NDE2MDY4Nzk2OTEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Ciclo",
          "value": "3",
          "lock": true
        },
        {
          "type": "file",
          "row": 2,
          "col": 1,
          "id": "MTY4NDE2MDY5NjcxNTEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Tiras 1 ao 4",
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "value": ""
        },
        {
          "type": "file",
          "row": 2,
          "col": 2,
          "id": "MTY4NDE2MDcwMjI0NDEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Tiras 5 ao 8",
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "value": "",
          "": ""
        },
        {
          "type": "input",
          "row": 3,
          "col": 0,
          "id": "MTY4NDE2MDY4Nzk2OTEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Ciclo",
          "value": "4",
          "lock": true
        },
        {
          "type": "file",
          "row": 3,
          "col": 1,
          "id": "MTY4NDE2MDY5NjcxNTEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Tiras 1 ao 4",
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "value": ""
        },
        {
          "type": "file",
          "row": 3,
          "col": 2,
          "id": "MTY4NDE2MDcwMjI0NDEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Tiras 5 ao 8",
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "value": ""
        },
        {
          "type": "input",
          "row": 4,
          "col": 0,
          "id": "MTY4NDE2MDY4Nzk2OTEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Ciclo",
          "value": "5",
          "lock": true
        },
        {
          "type": "file",
          "row": 4,
          "col": 1,
          "id": "MTY4NDE2MDY5NjcxNTEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Tiras 1 ao 4",
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "value": ""
        },
        {
          "type": "file",
          "row": 4,
          "col": 2,
          "id": "MTY4NDE2MDcwMjI0NDEwMDg2NTE5",
          "parentId": "MTY4NDE2MDY4MzI3ODEwMDg2NTE5",
          "title": "Tiras 5 ao 8",
          "source": "this.cell.metadata = {}",
          "metadata": {},
          "value": ""
        }
      ],
      "metadata": {},
      "title": "Tiras 5 ao 8",
      "value": "5",
      "": ""
    },
    {
      "id": "MTY4MTQxNzk0Nzk5NzEwMDg4NDk4",
      "type": "ps1",
      "source": "\r\nthis.cell.metadata = {};\r\nvscode.postMessage({\r\n    type: 'sp_request', \r\n    method: 'GET',\r\n    url: `https://brpucrs.sharepoint.com/sites/Labelo_Processos/_api/web/lists/GetByTitle('Incerteza')/items?$filter=FileDirRef eq '/sites/Labelo_Processos/Lists/CES/Máquinas de Lavar'`,\r\n    data: this.TextDocument,\r\n    id: this.cell.id\r\n});\r\n",
      "metadata": {},
      "title": "Calculo de Incertezas",
      "": ""
    },
    {
      "id": "MTY5MTc2MDUyMjI1ODEwMDg4NDk4",
      "type": "ps1",
      "source": "const getCell = (id) => this.TextDocument.cells.find(cell => cell.id === id);\r\nconst standardMachine = getCell('MTY4NDE2MDM3MjQ2NDEwMDg2NTE5').items\r\nconst standardMachineCycles = []\r\nconst cyclesData = getCell('MTY4NDE2MDY4MzI3ODEwMDg2NTE5').items\r\nconst cycles = [ ]\r\nthis.cell.metadata={}\r\n\r\nstandardMachineCycles.C = IM.average(standardMachine[0].metadata.negro_fumo) + IM.average(standardMachine[0].metadata.sangue) + IM.average(standardMachine[0].metadata.chocolateComLeite) + IM.average(standardMachine[0].metadata.vinho)  \r\n\r\ncycles.negro_fumo = IM.average((cyclesData[1].metadata.negro_fumo).concat(cyclesData[2].metadata.negro_fumo))\r\ncycles.sangue = IM.average((cyclesData[1].metadata.sangue).concat(cyclesData[2].metadata.sangue))\r\ncycles.chocolateComLeite = IM.average((cyclesData[1].metadata.chocolateComLeite).concat(cyclesData[2].metadata.chocolateComLeite))\r\ncycles.vinho = IM.average((cyclesData[1].metadata.vinho).concat(cyclesData[2].metadata.vinho))\r\ncycles.C = cycles.negro_fumo+cycles.sangue+cycles.chocolateComLeite+cycles.vinho\r\nthis.cell.metadata.html = cycles.C/standardMachineCycles.C\r\n\r\nvscode.postMessage({type: 'update_with_reload', data: this.TextDocument });",
      "metadata": {
        
      },
      "title": "Eficiência de Lavagem Ciclo 1"
    },
    {
      "id": "MTY5cTc2MDUyMjI1ODEwMDg4NDk4",
      "type": "ps1",
      "source": "const getCell = (id) => this.TextDocument.cells.find(cell => cell.id === id);\r\nconst standardMachine = getCell('MTY4NDE2MDM3MjQ2NDEwMDg2NTE5').items\r\nconst standardMachineCycles = []\r\nconst cyclesData = getCell('MTY4NDE2MDY4MzI3ODEwMDg2NTE5').items\r\nconst cycles = [ ]\r\nthis.cell.metadata={}\r\n\r\nstandardMachineCycles.C = IM.average(standardMachine[1].metadata.negro_fumo) + IM.average(standardMachine[1].metadata.sangue) + IM.average(standardMachine[1].metadata.chocolateComLeite) + IM.average(standardMachine[1].metadata.vinho)  \r\n\r\ncycles.negro_fumo = IM.average((cyclesData[4].metadata.negro_fumo).concat(cyclesData[5].metadata.negro_fumo))\r\ncycles.sangue = IM.average((cyclesData[4].metadata.sangue).concat(cyclesData[5].metadata.sangue))\r\ncycles.chocolateComLeite = IM.average((cyclesData[4].metadata.chocolateComLeite).concat(cyclesData[5].metadata.chocolateComLeite))\r\ncycles.vinho = IM.average((cyclesData[4].metadata.vinho).concat(cyclesData[5].metadata.vinho))\r\ncycles.C = cycles.negro_fumo+cycles.sangue+cycles.chocolateComLeite+cycles.vinho\r\nthis.cell.metadata.html = cycles.C/standardMachineCycles.C\r\n\r\nvscode.postMessage({type: 'update_with_reload', data: this.TextDocument });",
      "metadata": {
        
      },
      "title": "Eficiência de Lavagem Ciclo 2"
    },
    {
      "id": "MTY5cTc2MDUyMjI1ODEwMDg2NDk4",
      "type": "ps1",
      "source": "const getCell = (id) => this.TextDocument.cells.find(cell => cell.id === id);\r\nconst standardMachine = getCell('MTY4NDE2MDM3MjQ2NDEwMDg2NTE5').items\r\nconst standardMachineCycles = []\r\nconst cyclesData = getCell('MTY4NDE2MDY4MzI3ODEwMDg2NTE5').items\r\nconst cycles = [ ]\r\nthis.cell.metadata={}\r\n\r\nstandardMachineCycles.C = IM.average(standardMachine[2].metadata.negro_fumo) + IM.average(standardMachine[2].metadata.sangue) + IM.average(standardMachine[2].metadata.chocolateComLeite) + IM.average(standardMachine[2].metadata.vinho)  \r\n\r\ncycles.negro_fumo = IM.average((cyclesData[7].metadata.negro_fumo).concat(cyclesData[8].metadata.negro_fumo))\r\ncycles.sangue = IM.average((cyclesData[7].metadata.sangue).concat(cyclesData[8].metadata.sangue))\r\ncycles.chocolateComLeite = IM.average((cyclesData[7].metadata.chocolateComLeite).concat(cyclesData[8].metadata.chocolateComLeite))\r\ncycles.vinho = IM.average((cyclesData[7].metadata.vinho).concat(cyclesData[8].metadata.vinho))\r\ncycles.C = cycles.negro_fumo+cycles.sangue+cycles.chocolateComLeite+cycles.vinho\r\nthis.cell.metadata.html = cycles.C/standardMachineCycles.C\r\n\r\nvscode.postMessage({type: 'update_with_reload', data: this.TextDocument });",
      "metadata": {
        
      },
      "title": "Eficiência de Lavagem Ciclo 3"
    },
    {
      "id": "MTY5cTc2MDUyMjI1ODEwMDg2NDk3",
      "type": "ps1",
      "source": "const getCell = (id) => this.TextDocument.cells.find(cell => cell.id === id);\r\nconst standardMachine = getCell('MTY4NDE2MDM3MjQ2NDEwMDg2NTE5').items\r\nconst standardMachineCycles = []\r\nconst cyclesData = getCell('MTY4NDE2MDY4MzI3ODEwMDg2NTE5').items\r\nconst cycles = [ ]\r\nthis.cell.metadata={}\r\n\r\nstandardMachineCycles.C = IM.average(standardMachine[3].metadata.negro_fumo) + IM.average(standardMachine[3].metadata.sangue) + IM.average(standardMachine[3].metadata.chocolateComLeite) + IM.average(standardMachine[3].metadata.vinho)  \r\n\r\ncycles.negro_fumo = IM.average((cyclesData[10].metadata.negro_fumo).concat(cyclesData[11].metadata.negro_fumo))\r\ncycles.sangue = IM.average((cyclesData[10].metadata.sangue).concat(cyclesData[11].metadata.sangue))\r\ncycles.chocolateComLeite = IM.average((cyclesData[10].metadata.chocolateComLeite).concat(cyclesData[11].metadata.chocolateComLeite))\r\ncycles.vinho = IM.average((cyclesData[10].metadata.vinho).concat(cyclesData[11].metadata.vinho))\r\ncycles.C = cycles.negro_fumo+cycles.sangue+cycles.chocolateComLeite+cycles.vinho\r\nthis.cell.metadata.html = cycles.C/standardMachineCycles.C\r\n\r\nvscode.postMessage({type: 'update_with_reload', data: this.TextDocument });",
      "metadata": {
        
      },
      "title": "Eficiência de Lavagem Ciclo 4"
    },
    {
      "id": "MTY5cTc2MDUyMjI11DEwMDg2NDk4",
      "type": "ps1",
      "source": "const getCell = (id) => this.TextDocument.cells.find(cell => cell.id === id);\r\nconst standardMachine = getCell('MTY4NDE2MDM3MjQ2NDEwMDg2NTE5').items\r\nconst standardMachineCycles = []\r\nconst cyclesData = getCell('MTY4NDE2MDY4MzI3ODEwMDg2NTE5').items\r\nconst cycles = [ ]\r\nthis.cell.metadata={}\r\n\r\nstandardMachineCycles.C = IM.average(standardMachine[4].metadata.negro_fumo) + IM.average(standardMachine[4].metadata.sangue) + IM.average(standardMachine[4].metadata.chocolateComLeite) + IM.average(standardMachine[4].metadata.vinho)  \r\n\r\ncycles.negro_fumo = IM.average((cyclesData[13].metadata.negro_fumo).concat(cyclesData[14].metadata.negro_fumo))\r\ncycles.sangue = IM.average((cyclesData[13].metadata.sangue).concat(cyclesData[14].metadata.sangue))\r\ncycles.chocolateComLeite = IM.average((cyclesData[13].metadata.chocolateComLeite).concat(cyclesData[14].metadata.chocolateComLeite))\r\ncycles.vinho = IM.average((cyclesData[13].metadata.vinho).concat(cyclesData[14].metadata.vinho))\r\ncycles.C = cycles.negro_fumo+cycles.sangue+cycles.chocolateComLeite+cycles.vinho\r\nthis.cell.metadata.html = cycles.C/standardMachineCycles.C\r\n\r\nvscode.postMessage({type: 'update_with_reload', data: this.TextDocument });",
      "metadata": {
        
      },
      "title": "Eficiência de Lavagem Ciclo 5"
    }
  ],
  "report_template": {
    "type": "code",
    "id": "report_template",
    "source": "const getCell = (id) => register.cells.find(c=> c.id === id);\r\n\r\nconst  csvToArray = (str, delimiter) =>{\r\n    const data =  str.split('\\n')\r\n    .filter((row, index)=>row.length > 0 && index > 0)\r\n    .map(row=> row\r\n        .replace(/,/gi, '.')\r\n        .replace(/%/gi, '')\r\n        .trim()\r\n        .split(delimiter))\r\n    .filter(e=> e[4])\r\n\r\n        \r\n    return {\r\n        negro_fumo: data\r\n        .filter((row)=> row[4] === 'Negro de fumo')\r\n        .map((row)=> row.slice(5, 9)\r\n        .reduce((prev,curr)=> prev + parseFloat(curr), 0)/4),\r\n        sangue: data\r\n        .filter((row)=> row[4] === 'Sangue')\r\n        .map((row)=> row.slice(5, 9)\r\n        .reduce((prev,curr)=> prev + parseFloat(curr), 0)/4),\r\n        chocolateComLeite: data\r\n        .filter((row)=> row[4] === 'Chocolate com leite')\r\n        .map((row)=> row.slice(5, 9)\r\n        .reduce((prev,curr)=> prev + parseFloat(curr), 0)/4),\r\n        vinho: data\r\n        .filter((row)=> row[4] === 'Vinho')\r\n        .map((row)=> row.slice(5, 9)\r\n        .reduce((prev,curr)=> prev + parseFloat(curr), 0)/4),\r\n\r\n\r\n    }\r\n}\r\n\r\nconst  StripsValues = (file1, file2, delimiter,sujividade) =>{\r\n    let data1 =  file1.split('\\n')\r\n    .filter((row, index)=>row.length > 0 && index > 0)\r\n    .map(row=> row\r\n        .replace(/,/gi, '.')\r\n        .replace(/%/gi, '')\r\n        .trim()\r\n        .split(delimiter))\r\n    .filter(e=> e[4])\r\n\r\n    data1= data1\r\n    .filter((row)=> row[4] === sujividade)\r\n    .map((row)=> row.slice(5, 9)).join()\r\n\r\n    let data2 =  file2.split('\\n')\r\n    .filter((row, index)=>row.length > 0 && index > 0)\r\n    .map(row=> row\r\n        .replace(/,/gi, '.')\r\n        .replace(/%/gi, '')\r\n        .trim()\r\n        .split(delimiter))\r\n    .filter(e=> e[4])\r\n\r\n    data2= data2\r\n    .filter((row)=> row[4] === sujividade)\r\n    .map((row)=> row.slice(5, 9)).join()\r\n\r\n\r\n    let values = data1.concat(\",\",data2).split(',').map(Number);\r\n    if(file2==''){values=data1.split(',').map(Number);}\r\n\r\n    values.forEach((element, index) => {\r\n        values[index] = element/100;\r\n      });\r\n\r\n    return values\r\n\r\n}\r\n\r\n\r\n\r\nconst standardMachine = getCell('MTY4NDE2MDM3MjQ2NDEwMDg2NTE5').items\r\nconst standardMachineCycles = []\r\nconst cyclesData = getCell('MTY4NDE2MDY4MzI3ODEwMDg2NTE5').items\r\nconst cycles = [ ]\r\n\r\nfor (let i=0; i<5; i++){\r\n\r\n    let standardData;\r\n    if (standardMachine[i].metadata.negro_fumo){\r\n        standardData = standardMachine[i].metadata;\r\n        delete standardData.alreadyExecuted;\r\n    }else if (standardMachine[i].value !== \"\"){\r\n        const file = (await readFile(standardMachine[i].value))\r\n        // 5 array com 5 array (ciclos -> tiras)\r\n        standardData = await csvToArray(file, \";\")\r\n        standardMachine[i].metadata = {\r\n            ... (standardMachine[i].metadata || standardMachine[i].metadata),\r\n            ...standardData\r\n        }\r\n    }\r\n    standardMachineCycles.push({\r\n        value: standardData,\r\n        average: { \r\n            negro_fumo: IM.average(standardData.negro_fumo),\r\n            sangue: IM.average(standardData.sangue),\r\n            chocolateComLeite: IM.average(standardData.chocolateComLeite),\r\n            vinho: IM.average(standardData.vinho),\r\n        },\r\n        soma_c: (IM.average(standardData.negro_fumo)+IM.average(standardData.sangue)+IM.average(standardData.chocolateComLeite)+IM.average(standardData.vinho))\r\n    })\r\n\r\n    const cycle = {\r\n        negro_fumo: [], sangue: [], chocolateComLeite: [], vinho: []\r\n    } ;\r\n    for (let j = 1; j < 3; j++){\r\n        const cell = cyclesData.find((c)=> c.row === i && c.col === j);\r\n        let data;\r\n        if (cell.metadata.negro_fumo){\r\n            data = cell.metadata;\r\n        }else if (cell.value){\r\n            const file = (await readFile(cell.value))\r\n            const d = await csvToArray(file, ';')\r\n            cell.metadata = {...(cell.metadata || {}), ...d }\r\n            data = d;\r\n        }\r\n        Object.keys(cycle)\r\n        .forEach(key=> cycle[key].push(...data[key]))\r\n    }\r\n    cycles.push({\r\n        value: cycle,\r\n        average: {\r\n            negro_fumo: IM.average(cycle.negro_fumo),\r\n            sangue: IM.average(cycle.sangue),\r\n            chocolateComLeite: IM.average(cycle.chocolateComLeite),\r\n            vinho: IM.average(cycle.vinho),\r\n        },\r\n        soma_c:  (IM.average(cycle.negro_fumo) + IM.average(cycle.sangue) + IM.average(cycle.chocolateComLeite)+IM.average(cycle.vinho)),\r\n    })\r\n}\r\n\r\nconst Average_C ={\r\n    Cycles: IM.average(cycles.map(e => e.soma_c)),\r\n    StandardMachine: IM.average(standardMachineCycles.map(e => e.soma_c)),\r\n    Standard_deviation_Cycles :IM.standardDeviation(cycles.map(e => e.soma_c)),\r\n    Standard_deviation_StandardMachine : IM.standardDeviation(standardMachineCycles.map(e => e.soma_c))   \r\n\r\n} \r\n\r\nconst Medidas={\r\nRatio_C : Average_C.Cycles/Average_C.StandardMachine,\r\nStandard_deviation : IM.standardDeviation(cycles.map((e,index) => (e.soma_c / standardMachineCycles[index].soma_c) - Average_C.Cycles/Average_C.StandardMachine)),\r\np: (IM.standardDeviation(cycles.map((e,index) => (e.soma_c / standardMachineCycles[index].soma_c) - Average_C.Cycles/Average_C.StandardMachine))/Math.sqrt(5-1))*IM.studentt_inv(0.9545, (5-1))\r\n}\r\n\r\n//Parte das incertezas\r\n\r\nconst refInstruments = getCell('MTY4MTQxNzk0Nzk5NzEwMDg4NDk4').metadata.sp;\r\nif (!refInstruments) {\r\n  return \"<span class=\\\"error\\\"> Não foi possível encontrar os dados dos instrumentos utilizados</span>\"\r\n}\r\n\r\nconst getInstrument = (TAG, faixa, value, grandeza) => {\r\n    const ref = refInstruments.find((i) => i.Title === TAG && grandeza === i.Grandeza)\r\n    const obj = {\r\n      TAG: TAG,\r\n      Resolucao: ref.Resolu_x00e7__x00e3_o,\r\n      criterio_percentual_leitura: ref.Criterio_Aceitacao_x0028_percetu,\r\n      criterio_absoluto: ref.criteriovalorabsoluto,\r\n      criterio_percentual_faixa: ref.Crit_x002e_Aceitacao_x0028_perce\r\n    }\r\n  \r\n    obj.Total = obj.criterio_absoluto + obj.criterio_percentual_faixa * (faixa) + obj.criterio_percentual_leitura * (value)\r\n    return obj\r\n  }\r\n\r\n  const Datacolor = getInstrument(\r\n    getCell('MTY4NDI2ODkyMDA2ODEwMDg4NDk4').items[0].value,\r\n    0, Medidas.Ratio_C, 'Datacolor')\r\n\r\n//arquivos das sujividades\r\n  const files={\r\n    Cycle1_1: (cyclesData.find((c)=> c.row === 0 && c.col === 1)).value,\r\n    Cycle1_2: (cyclesData.find((c)=> c.row === 0 && c.col === 2)).value,\r\n    Cycle2_1: (cyclesData.find((c)=> c.row === 1 && c.col === 1)).value,\r\n    Cycle2_2: (cyclesData.find((c)=> c.row === 1 && c.col === 2)).value,\r\n    Cycle3_1: (cyclesData.find((c)=> c.row === 2 && c.col === 1)).value,\r\n    Cycle3_2: (cyclesData.find((c)=> c.row === 2 && c.col === 2)).value,\r\n    Cycle4_1: (cyclesData.find((c)=> c.row === 3 && c.col === 1)).value,\r\n    Cycle4_2: (cyclesData.find((c)=> c.row === 3 && c.col === 2)).value,\r\n    Cycle5_1: (cyclesData.find((c)=> c.row === 4 && c.col === 1)).value,\r\n    Cycle5_2: (cyclesData.find((c)=> c.row === 4 && c.col === 2)).value\r\n\r\n  }\r\n\r\n  const K_contributes = [\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 1',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 1',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 1',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 1',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle1_1),await readFile(files.Cycle1_2), ';','Vinho').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 2',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 2',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 2',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 2',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle2_1),await readFile(files.Cycle2_2), ';','Vinho').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 3',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 3',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 3',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 3',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle3_1),await readFile(files.Cycle3_2), ';','Vinho').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 4',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 4',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 4',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 4',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle4_1),await readFile(files.Cycle4_2), ';','Vinho').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 5',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 5',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 5',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 5',\r\n        divisor: Math.sqrt(StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(files.Cycle5_1),await readFile(files.Cycle5_2), ';','Vinho').length - 1\r\n    }\r\n\r\n]\r\n\r\n\r\nconst K_contributes_padrao = [\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[0].value),'', ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 1',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[0].value),'', ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[0].value),'', ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[0].value),'', ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 1',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[0].value),'', ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[0].value),'', ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[0].value),'', ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 1',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[0].value),'', ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[0].value),'', ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 1\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[0].value),'', ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 1',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[0].value),'', ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[0].value),'', ';','Vinho').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[1].value),'', ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 2',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[1].value),'', ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[1].value),'', ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[1].value),'', ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 2',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[1].value),'', ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[1].value),'', ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[1].value),'', ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 2',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[1].value),'', ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[1].value),'', ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 2\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[1].value),'', ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 2',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[1].value),'', ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[1].value),'', ';','Vinho').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[2].value),'', ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 3',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[2].value),'', ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[2].value),'', ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[2].value),'', ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 3',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[2].value),'', ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[2].value),'', ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[2].value),'', ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 3',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[2].value),'', ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[2].value),'', ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 3\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[2].value),'', ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 3',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[2].value),'', ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[2].value),'', ';','Vinho').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[3].value),'', ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 4',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[3].value),'', ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[3].value),'', ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[3].value),'', ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 4',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[3].value),'', ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[3].value),'', ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[3].value),'', ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 4',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[3].value),'', ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[3].value),'', ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 4\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[3].value),'', ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 4',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[3].value),'', ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[3].value),'', ';','Vinho').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 1 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 1 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[4].value),'', ';','Negro de fumo')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 1 - ciclo 5',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[4].value),'', ';','Negro de fumo').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[4].value),'', ';','Negro de fumo').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 2 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 2 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[4].value),'', ';','Sangue')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 2 - ciclo 5',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[4].value),'', ';','Sangue').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[4].value),'', ';','Sangue').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 3 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 3 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[4].value),'', ';','Chocolate com leite')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 3 - ciclo 5',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[4].value),'', ';','Chocolate com leite').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[4].value),'', ';','Chocolate com leite').length - 1\r\n    },\r\n    {\r\n        value: Datacolor.Total,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Critério de aceitação - Plano de calibração - Branco padrão - 4 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {        \r\n        value: (Datacolor.Resolucao)/2,\r\n        divisor: Math.sqrt(3),\r\n        name: \"Resolução - Espectrofotômetro - 4 - ciclo 5\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: IM.standardDeviation(StripsValues(await readFile(standardMachine[4].value),'', ';','Vinho')),\r\n        cs: 1,\r\n        name: 'Desvio padrão - 4 - ciclo 5',\r\n        divisor: Math.sqrt(StripsValues(await readFile(standardMachine[4].value),'', ';','Vinho').length), \r\n        v_eff: StripsValues(await readFile(standardMachine[4].value),'', ';','Vinho').length - 1\r\n    }\r\n\r\n]\r\n\r\nconst IM_maquina_teste = IM.calculate(K_contributes);\r\nconst IM_maquina_padrao = IM.calculate(K_contributes_padrao);\r\n\r\nconst contributes = [\r\n    {\r\n        value: ((IM_maquina_teste.u)/100)/(Average_C.Cycles/100),\r\n        divisor: IM_maquina_teste.k,\r\n        name: \"IM da máquina em teste - água quente\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    },\r\n    {\r\n        value: ((IM_maquina_padrao.u)/100)/(Average_C.StandardMachine/100),\r\n        divisor: IM_maquina_padrao.k,\r\n        name: \"IM da máquina padrão - água quente\",\r\n        cs: 1,\r\n        v_eff: 1e5\r\n    }\r\n]\r\n\r\nconst incerteza = IM.calculate(contributes, 0.9545, 2);\r\n\r\n\r\nreturn `\r\n<h1 class=\"title reset-title-counters\">Eficiência de lavagem:</h1>\r\n<table>\r\n  <tr>\r\n    <th>Média dos valores medidos (adim)</th>\r\n    <th>Desvio (adim)</th>\r\n    <th>IM (adim)</th>\r\n    <th>k</th>\r\n  </tr>\r\n  <tr>\r\n  <td>${Medidas.Ratio_C.toFixed(incerteza.numberOfDecimals).replace(\".\",\",\")}</td>\r\n  <td>${Medidas.p.toFixed(incerteza.numberOfDecimals).replace(\".\",\",\")}</td>\r\n  <td>${incerteza.u.replace(\".\",\",\")}</td>\r\n  <td>${incerteza.k.toFixed(2).replace(\".\",\",\")}</td>\r\n</tr>\r\n<caption>Eficiência de extração de água</caption>\r\n</table>\r\n`",
    "metadata": {},
    "": ""
  },
  "metadata": {
    "lastModified": "2023-05-24T19:39:34.410Z"
  }
}